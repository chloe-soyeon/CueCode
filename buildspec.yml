version: 0.2
#
env:
  variables:
    # ❗수정 필요: NCP 콘솔에서 확인한 Container Registry 주소를 입력하세요.
    NCP_CR_URL: "cuecode.kr.ncr.ntruss.com"
  parameter-store:
    # ❗수정 필요: NCP Parameter Store 또는 K8s Secret 등에서 kubeconfig를 가져오도록 설정하세요.
    # 이 예제에서는 /my-app/kubeconfig-b64 위치에 Base64로 인코딩된 kubeconfig가 저장되어 있다고 가정합니다.
    KUBECONFIG_B64: "/my-app/kubeconfig-b64"

phases:
  install:
    commands:
      # Kubeconfig 설정
      - echo "Configuring kubectl..."
      - echo $KUBECONFIG_B64 | base64 -d > /tmp/kubeconfig
      - export KUBECONFIG=/tmp/kubeconfig
      # Docker 로그인
      - echo "Logging in to Naver Cloud Container Registry..."
      - docker login -u ${NCP_CR_ACCESS_KEY_ID} -p ${NCP_CR_SECRET_KEY} ${NCP_CR_URL}

  pre_build:
    commands:
      - echo "Detecting changed services..."
      # Git Commit 해시의 앞 8자리를 이미지 태그로 사용
      - export IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-8)
      - echo "Using Image Tag: $IMAGE_TAG"
      # 변경된 파일 목록 가져오기 (이전 커밋과 비교)
      - |
        CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
        echo "Changed files: $CHANGED_FILES"
        
        # 변경된 서비스에 따라 빌드 플래그 설정
        if echo "$CHANGED_FILES" | grep -q "ApiGateway/"; then export BUILD_APIGATEWAY="true"; fi
        if echo "$CHANGED_FILES" | grep -q "FrontUI/"; then export BUILD_FRONTUI="true"; fi
        if echo "$CHANGED_FILES" | grep -q "MotionService/"; then export BUILD_MOTIONSERVICE="true"; fi
        if echo "$CHANGED_FILES" | grep -q "SpringConfigServer/"; then export BUILD_CONFIGSERVER="true"; fi
        if echo "$CHANGED_FILES" | grep -q "UserService/"; then export BUILD_USERSERVICE="true"; fi
        if echo "$CHANGED_FILES" | grep -q "CueCodeMotion/"; then export BUILD_CUECODEMOTION="true"; fi

  build:
    commands:
      - echo "Starting Docker builds and pushes for changed services..."

      - |
        if [ "$BUILD_APIGATEWAY" = "true" ]; then
          echo "Building and pushing ApiGateway image..."
          docker build -t ${NCP_CR_URL}/api-gateway:${IMAGE_TAG} ./ApiGateway
          docker push ${NCP_CR_URL}/api-gateway:${IMAGE_TAG}
        fi
      - |
        if [ "$BUILD_FRONTUI" = "true" ]; then
          echo "Building and pushing FrontUI image..."
          docker build -t ${NCP_CR_URL}/front-ui:${IMAGE_TAG} ./FrontUI
          docker push ${NCP_CR_URL}/front-ui:${IMAGE_TAG}
        fi
      - |
        if [ "$BUILD_MOTIONSERVICE" = "true" ]; then
          echo "Building and pushing MotionService image..."
          docker build -t ${NCP_CR_URL}/motion-service:${IMAGE_TAG} ./MotionService
          docker push ${NCP_CR_URL}/motion-service:${IMAGE_TAG}
        fi
      - |
        if [ "$BUILD_CONFIGSERVER" = "true" ]; then
          echo "Building and pushing SpringConfigServer image..."
          docker build -t ${NCP_CR_URL}/config-server:${IMAGE_TAG} ./SpringConfigServer
          docker push ${NCP_CR_URL}/config-server:${IMAGE_TAG}
        fi
      - |
        if [ "$BUILD_USERSERVICE" = "true" ]; then
          echo "Building and pushing UserService image..."
          docker build -t ${NCP_CR_URL}/user-service:${IMAGE_TAG} ./UserService
          docker push ${NCP_CR_URL}/user-service:${IMAGE_TAG}
        fi
      - |
        if [ "$BUILD_CUECODEMOTION" = "true" ]; then
          echo "Building and pushing CueCodeMotion image..."
          docker build -t ${NCP_CR_URL}/cuecode-motion:${IMAGE_TAG} ./CueCodeMotion
          docker push ${NCP_CR_URL}/cuecode-motion:${IMAGE_TAG}
        fi

  post_build:
    commands:
      - echo "Starting deployments for changed services..."

      - |
        if [ "$BUILD_APIGATEWAY" = "true" ]; then
          echo "Deploying ApiGateway..."
          sed -i "s|image:.*|image: ${NCP_CR_URL}/api-gateway:${IMAGE_TAG}|" ./ApiGateway/k8s/deployment.yaml
          kubectl apply -f ./ApiGateway/k8s/
        fi
      - |
        if [ "$BUILD_FRONTUI" = "true" ]; then
          echo "Deploying FrontUI..."
          sed -i "s|image:.*|image: ${NCP_CR_URL}/front-ui:${IMAGE_TAG}|" ./FrontUI/k8s/deployment.yaml
          kubectl apply -f ./FrontUI/k8s/
        fi
      - |
        if [ "$BUILD_MOTIONSERVICE" = "true" ]; then
          echo "Deploying MotionService..."
          sed -i "s|image:.*|image: ${NCP_CR_URL}/motion-service:${IMAGE_TAG}|" ./MotionService/k8s/deployment.yaml
          kubectl apply -f ./MotionService/k8s/
        fi
      - |
        if [ "$BUILD_CONFIGSERVER" = "true" ]; then
          echo "Deploying SpringConfigServer..."
          sed -i "s|image:.*|image: ${NCP_CR_URL}/config-server:${IMAGE_TAG}|" ./SpringConfigServer/k8s/deployment.yaml
          kubectl apply -f ./SpringConfigServer/k8s/
        fi
      - |
        if [ "$BUILD_USERSERVICE" = "true" ]; then
          echo "Deploying UserService..."
          sed -i "s|image:.*|image: ${NCP_CR_URL}/user-service:${IMAGE_TAG}|" ./UserService/k8s/deployment.yaml
          kubectl apply -f ./UserService/k8s/
        fi
      - |
        if [ "$BUILD_CUECODEMOTION" = "true" ]; then
          echo "Deploying CueCodeMotion..."
          sed -i "s|image:.*|image: ${NCP_CR_URL}/cuecode-motion:${IMAGE_TAG}|" ./CueCodeMotion/k8s/deployment.yaml
          kubectl apply -f ./CueCodeMotion/k8s/
        fi

artifacts:
  files: []
